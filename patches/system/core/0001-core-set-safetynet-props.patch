From 284c342901e79ab379262296e8ec50f1d3bead6a Mon Sep 17 00:00:00 2001
From: ggow <9898181+ggow@users.noreply.github.com>
Date: Mon, 21 Mar 2022 19:58:08 +0000
Subject: [PATCH 1/1] core: set safetynet props

Change-Id: Ic918ac2b4215bc6637cad422b42392b9979aeba5
---
 init/init.cpp             | 4 ++++
 init/property_service.cpp | 7 +++++++
 2 files changed, 11 insertions(+)

diff --git a/init/init.cpp b/init/init.cpp
index 7a370596e..c1f9145de 100755
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -557,6 +557,8 @@ static int charging_mode_booting(void) {
 #endif
 }
 
+extern void SetSafetyNetProps();
+
 int main(int argc, char** argv) {
     if (!strcmp(basename(argv[0]), "ueventd")) {
         return ueventd_main(argc, argv);
@@ -601,6 +603,8 @@ int main(int argc, char** argv) {
 
         property_init();
 
+        SetSafetyNetProps();
+
         // If arguments are passed both on the command line and in DT,
         // properties set in DT always have priority over the command-line ones.
         process_kernel_dt();
diff --git a/init/property_service.cpp b/init/property_service.cpp
index fc147966b..7edcbaea8 100644
--- a/init/property_service.cpp
+++ b/init/property_service.cpp
@@ -648,6 +648,13 @@ void load_system_props() {
     load_recovery_id_prop();
 }
 
+void SetSafetyNetProps() {
+    property_set_impl("ro.boot.flash.locked", "1");
+    property_set_impl("ro.boot.verifiedbootstate", "green");
+    property_set_impl("ro.boot.veritymode", "enforcing");
+    property_set_impl("ro.boot.vbmeta.device_state", "locked");
+}
+
 void start_property_service() {
     property_set_fd = create_socket(PROP_SERVICE_NAME, SOCK_STREAM | SOCK_CLOEXEC | SOCK_NONBLOCK,
                                     0666, 0, 0, NULL);
-- 
2.32.0

